<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Terminal</title><link>https://st3p.github.io/posts/</link><description>Recent content in Posts on Terminal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://st3p.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Power Supply</title><link>https://st3p.github.io/posts/powersupply/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><guid>https://st3p.github.io/posts/powersupply/</guid><description>material | #Material | #cuantity | | Transformator | 1 | | cable | 1 | | protoboard | 1 |
At first, the circuit was generated in the Livewire simulator to check that it worked properly, as shown in the following image:
Subsequently, the circuit was generated on the breadboard according to the previously simulated circuit. Once the correct forward voltages were achieved from each of the regulators experimentally, we were able to generate the circuit for printing with Autodesk&amp;rsquo;s Eagle application, as shown below:</description></item><item><title>Clock with logic gates</title><link>https://st3p.github.io/posts/clock/</link><pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate><guid>https://st3p.github.io/posts/clock/</guid><description>12hrs clock using logic gates The 74LS90 decade counter is a counter that is capable of dividing the frequency each time it is connected with one another, therefore it was used to make it send a signal synchronized with the clock pulse so that the desired account, in addition a 74LS47 decoder was connected for the display outputs.
The logic circuits that were used for the construction of the clock were: 74LS90, counter to decades, to count the seconds and minutes; 74LS47, BCD decoder, to decode the counter outputs to outputs for the 7 segment display; 74LS190, synchronous BCD counter, to generate the sequence of the hours (1 to 12); 74LS73, JK flip-flop, to display if it is AM OR PM; 74LS08, 2-input AND; 74LS00, 2-input NAND; finally, 74LS04, NOT.</description></item><item><title>Shift Registrers</title><link>https://st3p.github.io/posts/shiftregistrers/</link><pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate><guid>https://st3p.github.io/posts/shiftregistrers/</guid><description>Screen Saver: Basic Scroll: The Mouse For the first part, it was decided to use six JK flip flops (74LS76) connecting their outputs to the J inputs and the negated outputs to the K inputs, for the first flip flop a two input OR (74LS32) connected to the output of the last flip flop and to a pulse signal, so that, together with the clock signal connected to all the flip flops, a high signal would be passed through all the flip flops and with the outputs in parallel connect them to the display.</description></item><item><title>Mini R2-D2</title><link>https://st3p.github.io/posts/mini-r2-d2/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://st3p.github.io/posts/mini-r2-d2/</guid><description>simulation of mecanismis using Solidworks. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. Donec quis dolor nec nunc mollis interdum vel in purus. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.</description></item><item><title>Simulation of the movement of a creature</title><link>https://st3p.github.io/posts/simulation-dragon/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://st3p.github.io/posts/simulation-dragon/</guid><description>simulation of mecanismis using Solidworks. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. Donec quis dolor nec nunc mollis interdum vel in purus. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.</description></item></channel></rss>